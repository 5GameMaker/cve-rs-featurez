#![deny(unsafe_code)]
#![deny(clippy::pedantic)]
#![deny(clippy::nursery)]

use clap::{Parser, Subcommand};

mod use_after_free;

#[derive(Parser)]
#[command(author, version, about)]
#[command(propagate_version = true)]
struct Cli {
	#[command(subcommand)]
	command: Commands,
}

#[derive(Subcommand)]
enum Commands {
	/// Reads a few characters in stdin and overflows an immutable buffer.
	UseAfterFree,
}

fn main() {
	let Cli { command } = Cli::parse();

	match command {
		Commands::UseAfterFree => use_after_free::use_after_free(),
	}
}
